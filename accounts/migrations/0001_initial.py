# Generated by Django 4.1 on 2022-08-14 06:12

import accounts.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nickname', models.CharField(max_length=15, unique=True)),
                ('image', models.URLField(blank=True, default='', max_length=511)),
                ('description', models.TextField(blank=True, default='')),
                ('social_id', models.TextField()),
                ('position', models.CharField(choices=[('개발자', '개발자'), ('디자이너', '디자이너'), ('기획자', '기획자')], default='개발자', max_length=10)),
                ('level', models.CharField(blank=True, choices=[('코린이', '코린이'), ('코등학생', '코등학생'), ('코대생', '코대생'), ('코드닌자', '코드닌자'), ('하수', '하수'), ('초수', '초수'), ('중수', '중수'), ('고수', '고수')], default='코린이', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-id'],
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
